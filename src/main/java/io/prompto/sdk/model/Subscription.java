/*
 * Abella
 * Partner API application
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.prompto.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.prompto.sdk.model.Link;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * Subscription
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-09T15:57:22.781-05:00")
public class Subscription implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("_id")
  private String id = null;

  @SerializedName("activeDate")
  private Long activeDate = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("branchId")
  private String branchId = null;

  @SerializedName("company")
  private String company = null;

  @SerializedName("createDate")
  private Long createDate = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("delinquentDate")
  private Long delinquentDate = null;

  @SerializedName("discount")
  private BigDecimal discount = null;

  @SerializedName("endDate")
  private Long endDate = null;

  @SerializedName("externalMetadata")
  private String externalMetadata = null;

  @SerializedName("goodUntil")
  private Long goodUntil = null;

  @SerializedName("gracePeriod")
  private Integer gracePeriod = null;

  /**
   * Gets or Sets gracePeriodUnit
   */
  @JsonAdapter(GracePeriodUnitEnum.Adapter.class)
  public enum GracePeriodUnitEnum {
    DAY("DAY"),
    
    WEEK("WEEK"),
    
    MONTH("MONTH"),
    
    YEAR("YEAR");

    private String value;

    GracePeriodUnitEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GracePeriodUnitEnum fromValue(String text) {
      for (GracePeriodUnitEnum b : GracePeriodUnitEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<GracePeriodUnitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GracePeriodUnitEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GracePeriodUnitEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return GracePeriodUnitEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("gracePeriodUnit")
  private GracePeriodUnitEnum gracePeriodUnit = null;

  @SerializedName("grandTotal")
  private BigDecimal grandTotal = null;

  @SerializedName("links")
  private List<Link> links = null;

  @SerializedName("metadata")
  private String metadata = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nextBillingCycle")
  private Long nextBillingCycle = null;

  @SerializedName("others")
  private BigDecimal others = null;

  @SerializedName("partnerId")
  private String partnerId = null;

  @SerializedName("paymentMethodId")
  private String paymentMethodId = null;

  @SerializedName("paymentNumber")
  private Integer paymentNumber = null;

  @SerializedName("period")
  private Integer period = null;

  /**
   * Gets or Sets periodUnit
   */
  @JsonAdapter(PeriodUnitEnum.Adapter.class)
  public enum PeriodUnitEnum {
    DAY("DAY"),
    
    WEEK("WEEK"),
    
    MONTH("MONTH"),
    
    YEAR("YEAR");

    private String value;

    PeriodUnitEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PeriodUnitEnum fromValue(String text) {
      for (PeriodUnitEnum b : PeriodUnitEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PeriodUnitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PeriodUnitEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PeriodUnitEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PeriodUnitEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("periodUnit")
  private PeriodUnitEnum periodUnit = null;

  @SerializedName("planId")
  private String planId = null;

  /**
   * Gets or Sets planType
   */
  @JsonAdapter(PlanTypeEnum.Adapter.class)
  public enum PlanTypeEnum {
    ONE_TIME("ONE_TIME"),
    
    RECURRING("RECURRING");

    private String value;

    PlanTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PlanTypeEnum fromValue(String text) {
      for (PlanTypeEnum b : PlanTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PlanTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlanTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PlanTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PlanTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("planType")
  private PlanTypeEnum planType = null;

  @SerializedName("purchaseOrder")
  private String purchaseOrder = null;

  @SerializedName("reason")
  private String reason = null;

  @SerializedName("startDate")
  private Long startDate = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    INACTIVE("INACTIVE"),
    
    ACTIVE("ACTIVE"),
    
    DELINQUENT("DELINQUENT"),
    
    SUSPENDED("SUSPENDED"),
    
    CANCELED("CANCELED"),
    
    FINISHED("FINISHED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("terminationDate")
  private Long terminationDate = null;

  @SerializedName("userFullName")
  private String userFullName = null;

  @SerializedName("userId")
  private String userId = null;

  public Subscription id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Subscription activeDate(Long activeDate) {
    this.activeDate = activeDate;
    return this;
  }

   /**
   * Get activeDate
   * @return activeDate
  **/
  @ApiModelProperty(value = "")
  public Long getActiveDate() {
    return activeDate;
  }

  public void setActiveDate(Long activeDate) {
    this.activeDate = activeDate;
  }

  public Subscription amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public Subscription branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Get branchId
   * @return branchId
  **/
  @ApiModelProperty(value = "")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public Subscription company(String company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @ApiModelProperty(value = "")
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }

  public Subscription createDate(Long createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(value = "")
  public Long getCreateDate() {
    return createDate;
  }

  public void setCreateDate(Long createDate) {
    this.createDate = createDate;
  }

  public Subscription currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Subscription delinquentDate(Long delinquentDate) {
    this.delinquentDate = delinquentDate;
    return this;
  }

   /**
   * Get delinquentDate
   * @return delinquentDate
  **/
  @ApiModelProperty(value = "")
  public Long getDelinquentDate() {
    return delinquentDate;
  }

  public void setDelinquentDate(Long delinquentDate) {
    this.delinquentDate = delinquentDate;
  }

  public Subscription discount(BigDecimal discount) {
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getDiscount() {
    return discount;
  }

  public void setDiscount(BigDecimal discount) {
    this.discount = discount;
  }

  public Subscription endDate(Long endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public Long getEndDate() {
    return endDate;
  }

  public void setEndDate(Long endDate) {
    this.endDate = endDate;
  }

  public Subscription externalMetadata(String externalMetadata) {
    this.externalMetadata = externalMetadata;
    return this;
  }

   /**
   * Get externalMetadata
   * @return externalMetadata
  **/
  @ApiModelProperty(value = "")
  public String getExternalMetadata() {
    return externalMetadata;
  }

  public void setExternalMetadata(String externalMetadata) {
    this.externalMetadata = externalMetadata;
  }

  public Subscription goodUntil(Long goodUntil) {
    this.goodUntil = goodUntil;
    return this;
  }

   /**
   * Get goodUntil
   * @return goodUntil
  **/
  @ApiModelProperty(value = "")
  public Long getGoodUntil() {
    return goodUntil;
  }

  public void setGoodUntil(Long goodUntil) {
    this.goodUntil = goodUntil;
  }

  public Subscription gracePeriod(Integer gracePeriod) {
    this.gracePeriod = gracePeriod;
    return this;
  }

   /**
   * Get gracePeriod
   * @return gracePeriod
  **/
  @ApiModelProperty(value = "")
  public Integer getGracePeriod() {
    return gracePeriod;
  }

  public void setGracePeriod(Integer gracePeriod) {
    this.gracePeriod = gracePeriod;
  }

  public Subscription gracePeriodUnit(GracePeriodUnitEnum gracePeriodUnit) {
    this.gracePeriodUnit = gracePeriodUnit;
    return this;
  }

   /**
   * Get gracePeriodUnit
   * @return gracePeriodUnit
  **/
  @ApiModelProperty(value = "")
  public GracePeriodUnitEnum getGracePeriodUnit() {
    return gracePeriodUnit;
  }

  public void setGracePeriodUnit(GracePeriodUnitEnum gracePeriodUnit) {
    this.gracePeriodUnit = gracePeriodUnit;
  }

  public Subscription grandTotal(BigDecimal grandTotal) {
    this.grandTotal = grandTotal;
    return this;
  }

   /**
   * Get grandTotal
   * @return grandTotal
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getGrandTotal() {
    return grandTotal;
  }

  public void setGrandTotal(BigDecimal grandTotal) {
    this.grandTotal = grandTotal;
  }

  public Subscription links(List<Link> links) {
    this.links = links;
    return this;
  }

  public Subscription addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<Link>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }

  public Subscription metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  public Subscription name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Subscription nextBillingCycle(Long nextBillingCycle) {
    this.nextBillingCycle = nextBillingCycle;
    return this;
  }

   /**
   * Get nextBillingCycle
   * @return nextBillingCycle
  **/
  @ApiModelProperty(value = "")
  public Long getNextBillingCycle() {
    return nextBillingCycle;
  }

  public void setNextBillingCycle(Long nextBillingCycle) {
    this.nextBillingCycle = nextBillingCycle;
  }

  public Subscription others(BigDecimal others) {
    this.others = others;
    return this;
  }

   /**
   * Get others
   * @return others
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getOthers() {
    return others;
  }

  public void setOthers(BigDecimal others) {
    this.others = others;
  }

  public Subscription partnerId(String partnerId) {
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Get partnerId
   * @return partnerId
  **/
  @ApiModelProperty(value = "")
  public String getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(String partnerId) {
    this.partnerId = partnerId;
  }

  public Subscription paymentMethodId(String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
    return this;
  }

   /**
   * Get paymentMethodId
   * @return paymentMethodId
  **/
  @ApiModelProperty(value = "")
  public String getPaymentMethodId() {
    return paymentMethodId;
  }

  public void setPaymentMethodId(String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }

  public Subscription paymentNumber(Integer paymentNumber) {
    this.paymentNumber = paymentNumber;
    return this;
  }

   /**
   * Get paymentNumber
   * @return paymentNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getPaymentNumber() {
    return paymentNumber;
  }

  public void setPaymentNumber(Integer paymentNumber) {
    this.paymentNumber = paymentNumber;
  }

  public Subscription period(Integer period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @ApiModelProperty(value = "")
  public Integer getPeriod() {
    return period;
  }

  public void setPeriod(Integer period) {
    this.period = period;
  }

  public Subscription periodUnit(PeriodUnitEnum periodUnit) {
    this.periodUnit = periodUnit;
    return this;
  }

   /**
   * Get periodUnit
   * @return periodUnit
  **/
  @ApiModelProperty(value = "")
  public PeriodUnitEnum getPeriodUnit() {
    return periodUnit;
  }

  public void setPeriodUnit(PeriodUnitEnum periodUnit) {
    this.periodUnit = periodUnit;
  }

  public Subscription planId(String planId) {
    this.planId = planId;
    return this;
  }

   /**
   * Get planId
   * @return planId
  **/
  @ApiModelProperty(value = "")
  public String getPlanId() {
    return planId;
  }

  public void setPlanId(String planId) {
    this.planId = planId;
  }

  public Subscription planType(PlanTypeEnum planType) {
    this.planType = planType;
    return this;
  }

   /**
   * Get planType
   * @return planType
  **/
  @ApiModelProperty(value = "")
  public PlanTypeEnum getPlanType() {
    return planType;
  }

  public void setPlanType(PlanTypeEnum planType) {
    this.planType = planType;
  }

  public Subscription purchaseOrder(String purchaseOrder) {
    this.purchaseOrder = purchaseOrder;
    return this;
  }

   /**
   * Get purchaseOrder
   * @return purchaseOrder
  **/
  @ApiModelProperty(value = "")
  public String getPurchaseOrder() {
    return purchaseOrder;
  }

  public void setPurchaseOrder(String purchaseOrder) {
    this.purchaseOrder = purchaseOrder;
  }

  public Subscription reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Get reason
   * @return reason
  **/
  @ApiModelProperty(value = "")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public Subscription startDate(Long startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public Long getStartDate() {
    return startDate;
  }

  public void setStartDate(Long startDate) {
    this.startDate = startDate;
  }

  public Subscription status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Subscription terminationDate(Long terminationDate) {
    this.terminationDate = terminationDate;
    return this;
  }

   /**
   * Get terminationDate
   * @return terminationDate
  **/
  @ApiModelProperty(value = "")
  public Long getTerminationDate() {
    return terminationDate;
  }

  public void setTerminationDate(Long terminationDate) {
    this.terminationDate = terminationDate;
  }

  public Subscription userFullName(String userFullName) {
    this.userFullName = userFullName;
    return this;
  }

   /**
   * Get userFullName
   * @return userFullName
  **/
  @ApiModelProperty(value = "")
  public String getUserFullName() {
    return userFullName;
  }

  public void setUserFullName(String userFullName) {
    this.userFullName = userFullName;
  }

  public Subscription userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Subscription subscription = (Subscription) o;
    return Objects.equals(this.id, subscription.id) &&
        Objects.equals(this.activeDate, subscription.activeDate) &&
        Objects.equals(this.amount, subscription.amount) &&
        Objects.equals(this.branchId, subscription.branchId) &&
        Objects.equals(this.company, subscription.company) &&
        Objects.equals(this.createDate, subscription.createDate) &&
        Objects.equals(this.currency, subscription.currency) &&
        Objects.equals(this.delinquentDate, subscription.delinquentDate) &&
        Objects.equals(this.discount, subscription.discount) &&
        Objects.equals(this.endDate, subscription.endDate) &&
        Objects.equals(this.externalMetadata, subscription.externalMetadata) &&
        Objects.equals(this.goodUntil, subscription.goodUntil) &&
        Objects.equals(this.gracePeriod, subscription.gracePeriod) &&
        Objects.equals(this.gracePeriodUnit, subscription.gracePeriodUnit) &&
        Objects.equals(this.grandTotal, subscription.grandTotal) &&
        Objects.equals(this.links, subscription.links) &&
        Objects.equals(this.metadata, subscription.metadata) &&
        Objects.equals(this.name, subscription.name) &&
        Objects.equals(this.nextBillingCycle, subscription.nextBillingCycle) &&
        Objects.equals(this.others, subscription.others) &&
        Objects.equals(this.partnerId, subscription.partnerId) &&
        Objects.equals(this.paymentMethodId, subscription.paymentMethodId) &&
        Objects.equals(this.paymentNumber, subscription.paymentNumber) &&
        Objects.equals(this.period, subscription.period) &&
        Objects.equals(this.periodUnit, subscription.periodUnit) &&
        Objects.equals(this.planId, subscription.planId) &&
        Objects.equals(this.planType, subscription.planType) &&
        Objects.equals(this.purchaseOrder, subscription.purchaseOrder) &&
        Objects.equals(this.reason, subscription.reason) &&
        Objects.equals(this.startDate, subscription.startDate) &&
        Objects.equals(this.status, subscription.status) &&
        Objects.equals(this.terminationDate, subscription.terminationDate) &&
        Objects.equals(this.userFullName, subscription.userFullName) &&
        Objects.equals(this.userId, subscription.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, activeDate, amount, branchId, company, createDate, currency, delinquentDate, discount, endDate, externalMetadata, goodUntil, gracePeriod, gracePeriodUnit, grandTotal, links, metadata, name, nextBillingCycle, others, partnerId, paymentMethodId, paymentNumber, period, periodUnit, planId, planType, purchaseOrder, reason, startDate, status, terminationDate, userFullName, userId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Subscription {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    activeDate: ").append(toIndentedString(activeDate)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    delinquentDate: ").append(toIndentedString(delinquentDate)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    externalMetadata: ").append(toIndentedString(externalMetadata)).append("\n");
    sb.append("    goodUntil: ").append(toIndentedString(goodUntil)).append("\n");
    sb.append("    gracePeriod: ").append(toIndentedString(gracePeriod)).append("\n");
    sb.append("    gracePeriodUnit: ").append(toIndentedString(gracePeriodUnit)).append("\n");
    sb.append("    grandTotal: ").append(toIndentedString(grandTotal)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nextBillingCycle: ").append(toIndentedString(nextBillingCycle)).append("\n");
    sb.append("    others: ").append(toIndentedString(others)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    paymentNumber: ").append(toIndentedString(paymentNumber)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    periodUnit: ").append(toIndentedString(periodUnit)).append("\n");
    sb.append("    planId: ").append(toIndentedString(planId)).append("\n");
    sb.append("    planType: ").append(toIndentedString(planType)).append("\n");
    sb.append("    purchaseOrder: ").append(toIndentedString(purchaseOrder)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    terminationDate: ").append(toIndentedString(terminationDate)).append("\n");
    sb.append("    userFullName: ").append(toIndentedString(userFullName)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

