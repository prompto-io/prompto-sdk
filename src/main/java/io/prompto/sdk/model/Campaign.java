/*
 * Abella
 * Partner API application
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.prompto.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.prompto.sdk.model.Link;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * Campaign
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-09T15:57:22.781-05:00")
public class Campaign implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("_id")
  private String id = null;

  @SerializedName("branchId")
  private String branchId = null;

  /**
   * Gets or Sets campaignSupportType
   */
  @JsonAdapter(CampaignSupportTypeEnum.Adapter.class)
  public enum CampaignSupportTypeEnum {
    ONE_TIME("ONE_TIME"),
    
    RECURRING("RECURRING"),
    
    BOTH("BOTH");

    private String value;

    CampaignSupportTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CampaignSupportTypeEnum fromValue(String text) {
      for (CampaignSupportTypeEnum b : CampaignSupportTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CampaignSupportTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CampaignSupportTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CampaignSupportTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CampaignSupportTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("campaignSupportType")
  private CampaignSupportTypeEnum campaignSupportType = null;

  @SerializedName("createDate")
  private Long createDate = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("donatedAmount")
  private BigDecimal donatedAmount = null;

  @SerializedName("donatorsCount")
  private Long donatorsCount = null;

  @SerializedName("endDate")
  private Long endDate = null;

  @SerializedName("goal")
  private BigDecimal goal = null;

  @SerializedName("links")
  private List<Link> links = null;

  @SerializedName("maxAmount")
  private BigDecimal maxAmount = null;

  @SerializedName("metadata")
  private String metadata = null;

  @SerializedName("minAmount")
  private BigDecimal minAmount = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("partnerId")
  private String partnerId = null;

  @SerializedName("period")
  private Integer period = null;

  /**
   * Gets or Sets periodUnit
   */
  @JsonAdapter(PeriodUnitEnum.Adapter.class)
  public enum PeriodUnitEnum {
    DAY("DAY"),
    
    WEEK("WEEK"),
    
    MONTH("MONTH"),
    
    YEAR("YEAR");

    private String value;

    PeriodUnitEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PeriodUnitEnum fromValue(String text) {
      for (PeriodUnitEnum b : PeriodUnitEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PeriodUnitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PeriodUnitEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PeriodUnitEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PeriodUnitEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("periodUnit")
  private PeriodUnitEnum periodUnit = null;

  @SerializedName("published")
  private Boolean published = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("ACTIVE"),
    
    STOPPED("STOPPED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("suggestedAmounts")
  private String suggestedAmounts = null;

  public Campaign id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Campaign branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Get branchId
   * @return branchId
  **/
  @ApiModelProperty(value = "")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public Campaign campaignSupportType(CampaignSupportTypeEnum campaignSupportType) {
    this.campaignSupportType = campaignSupportType;
    return this;
  }

   /**
   * Get campaignSupportType
   * @return campaignSupportType
  **/
  @ApiModelProperty(value = "")
  public CampaignSupportTypeEnum getCampaignSupportType() {
    return campaignSupportType;
  }

  public void setCampaignSupportType(CampaignSupportTypeEnum campaignSupportType) {
    this.campaignSupportType = campaignSupportType;
  }

  public Campaign createDate(Long createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(value = "")
  public Long getCreateDate() {
    return createDate;
  }

  public void setCreateDate(Long createDate) {
    this.createDate = createDate;
  }

  public Campaign currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Campaign description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Campaign donatedAmount(BigDecimal donatedAmount) {
    this.donatedAmount = donatedAmount;
    return this;
  }

   /**
   * Get donatedAmount
   * @return donatedAmount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getDonatedAmount() {
    return donatedAmount;
  }

  public void setDonatedAmount(BigDecimal donatedAmount) {
    this.donatedAmount = donatedAmount;
  }

  public Campaign donatorsCount(Long donatorsCount) {
    this.donatorsCount = donatorsCount;
    return this;
  }

   /**
   * Get donatorsCount
   * @return donatorsCount
  **/
  @ApiModelProperty(value = "")
  public Long getDonatorsCount() {
    return donatorsCount;
  }

  public void setDonatorsCount(Long donatorsCount) {
    this.donatorsCount = donatorsCount;
  }

  public Campaign endDate(Long endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public Long getEndDate() {
    return endDate;
  }

  public void setEndDate(Long endDate) {
    this.endDate = endDate;
  }

  public Campaign goal(BigDecimal goal) {
    this.goal = goal;
    return this;
  }

   /**
   * Get goal
   * @return goal
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getGoal() {
    return goal;
  }

  public void setGoal(BigDecimal goal) {
    this.goal = goal;
  }

  public Campaign links(List<Link> links) {
    this.links = links;
    return this;
  }

  public Campaign addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<Link>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }

  public Campaign maxAmount(BigDecimal maxAmount) {
    this.maxAmount = maxAmount;
    return this;
  }

   /**
   * Get maxAmount
   * @return maxAmount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMaxAmount() {
    return maxAmount;
  }

  public void setMaxAmount(BigDecimal maxAmount) {
    this.maxAmount = maxAmount;
  }

  public Campaign metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  public Campaign minAmount(BigDecimal minAmount) {
    this.minAmount = minAmount;
    return this;
  }

   /**
   * Get minAmount
   * @return minAmount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMinAmount() {
    return minAmount;
  }

  public void setMinAmount(BigDecimal minAmount) {
    this.minAmount = minAmount;
  }

  public Campaign name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Campaign partnerId(String partnerId) {
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Get partnerId
   * @return partnerId
  **/
  @ApiModelProperty(value = "")
  public String getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(String partnerId) {
    this.partnerId = partnerId;
  }

  public Campaign period(Integer period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @ApiModelProperty(value = "")
  public Integer getPeriod() {
    return period;
  }

  public void setPeriod(Integer period) {
    this.period = period;
  }

  public Campaign periodUnit(PeriodUnitEnum periodUnit) {
    this.periodUnit = periodUnit;
    return this;
  }

   /**
   * Get periodUnit
   * @return periodUnit
  **/
  @ApiModelProperty(value = "")
  public PeriodUnitEnum getPeriodUnit() {
    return periodUnit;
  }

  public void setPeriodUnit(PeriodUnitEnum periodUnit) {
    this.periodUnit = periodUnit;
  }

  public Campaign published(Boolean published) {
    this.published = published;
    return this;
  }

   /**
   * Get published
   * @return published
  **/
  @ApiModelProperty(value = "")
  public Boolean isPublished() {
    return published;
  }

  public void setPublished(Boolean published) {
    this.published = published;
  }

  public Campaign status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Campaign suggestedAmounts(String suggestedAmounts) {
    this.suggestedAmounts = suggestedAmounts;
    return this;
  }

   /**
   * Get suggestedAmounts
   * @return suggestedAmounts
  **/
  @ApiModelProperty(value = "")
  public String getSuggestedAmounts() {
    return suggestedAmounts;
  }

  public void setSuggestedAmounts(String suggestedAmounts) {
    this.suggestedAmounts = suggestedAmounts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Campaign campaign = (Campaign) o;
    return Objects.equals(this.id, campaign.id) &&
        Objects.equals(this.branchId, campaign.branchId) &&
        Objects.equals(this.campaignSupportType, campaign.campaignSupportType) &&
        Objects.equals(this.createDate, campaign.createDate) &&
        Objects.equals(this.currency, campaign.currency) &&
        Objects.equals(this.description, campaign.description) &&
        Objects.equals(this.donatedAmount, campaign.donatedAmount) &&
        Objects.equals(this.donatorsCount, campaign.donatorsCount) &&
        Objects.equals(this.endDate, campaign.endDate) &&
        Objects.equals(this.goal, campaign.goal) &&
        Objects.equals(this.links, campaign.links) &&
        Objects.equals(this.maxAmount, campaign.maxAmount) &&
        Objects.equals(this.metadata, campaign.metadata) &&
        Objects.equals(this.minAmount, campaign.minAmount) &&
        Objects.equals(this.name, campaign.name) &&
        Objects.equals(this.partnerId, campaign.partnerId) &&
        Objects.equals(this.period, campaign.period) &&
        Objects.equals(this.periodUnit, campaign.periodUnit) &&
        Objects.equals(this.published, campaign.published) &&
        Objects.equals(this.status, campaign.status) &&
        Objects.equals(this.suggestedAmounts, campaign.suggestedAmounts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, branchId, campaignSupportType, createDate, currency, description, donatedAmount, donatorsCount, endDate, goal, links, maxAmount, metadata, minAmount, name, partnerId, period, periodUnit, published, status, suggestedAmounts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Campaign {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    campaignSupportType: ").append(toIndentedString(campaignSupportType)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    donatedAmount: ").append(toIndentedString(donatedAmount)).append("\n");
    sb.append("    donatorsCount: ").append(toIndentedString(donatorsCount)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    goal: ").append(toIndentedString(goal)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    maxAmount: ").append(toIndentedString(maxAmount)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    minAmount: ").append(toIndentedString(minAmount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    periodUnit: ").append(toIndentedString(periodUnit)).append("\n");
    sb.append("    published: ").append(toIndentedString(published)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    suggestedAmounts: ").append(toIndentedString(suggestedAmounts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

