/*
 * Abella
 * Partner API application
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.prompto.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.prompto.sdk.model.ACHMethod;
import io.prompto.sdk.model.CreditCardMethod;
import io.prompto.sdk.model.Link;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * PaymentIntent
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-09T15:57:22.781-05:00")
public class PaymentIntent implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("_id")
  private String id = null;

  @SerializedName("ach")
  private ACHMethod ach = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("branchId")
  private String branchId = null;

  @SerializedName("createDate")
  private Long createDate = null;

  @SerializedName("creditCard")
  private CreditCardMethod creditCard = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("errorCode")
  private String errorCode = null;

  @SerializedName("errorMessage")
  private String errorMessage = null;

  /**
   * Gets or Sets gatewayType
   */
  @JsonAdapter(GatewayTypeEnum.Adapter.class)
  public enum GatewayTypeEnum {
    PAYMENT_SPRING("PAYMENT_SPRING"),
    
    STRIPE("STRIPE"),
    
    OPENPAY("OPENPAY");

    private String value;

    GatewayTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GatewayTypeEnum fromValue(String text) {
      for (GatewayTypeEnum b : GatewayTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<GatewayTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GatewayTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GatewayTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return GatewayTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("gatewayType")
  private GatewayTypeEnum gatewayType = null;

  @SerializedName("invoiceId")
  private String invoiceId = null;

  @SerializedName("links")
  private List<Link> links = null;

  /**
   * Gets or Sets method
   */
  @JsonAdapter(MethodEnum.Adapter.class)
  public enum MethodEnum {
    CREDIT_CARD("CREDIT_CARD"),
    
    ACH("ACH"),
    
    POS("POS"),
    
    CASH("CASH"),
    
    CHECK("CHECK");

    private String value;

    MethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MethodEnum fromValue(String text) {
      for (MethodEnum b : MethodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<MethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MethodEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return MethodEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("method")
  private MethodEnum method = null;

  @SerializedName("owner")
  private String owner = null;

  @SerializedName("partnerId")
  private String partnerId = null;

  @SerializedName("paymentId")
  private String paymentId = null;

  @SerializedName("processedDate")
  private Long processedDate = null;

  @SerializedName("sandbox")
  private Boolean sandbox = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    IN_PROGRESS("IN_PROGRESS"),
    
    COMPLETED("COMPLETED"),
    
    FAILED("FAILED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  public PaymentIntent id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PaymentIntent ach(ACHMethod ach) {
    this.ach = ach;
    return this;
  }

   /**
   * Get ach
   * @return ach
  **/
  @ApiModelProperty(value = "")
  public ACHMethod getAch() {
    return ach;
  }

  public void setAch(ACHMethod ach) {
    this.ach = ach;
  }

  public PaymentIntent amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public PaymentIntent branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Get branchId
   * @return branchId
  **/
  @ApiModelProperty(value = "")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public PaymentIntent createDate(Long createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(value = "")
  public Long getCreateDate() {
    return createDate;
  }

  public void setCreateDate(Long createDate) {
    this.createDate = createDate;
  }

  public PaymentIntent creditCard(CreditCardMethod creditCard) {
    this.creditCard = creditCard;
    return this;
  }

   /**
   * Get creditCard
   * @return creditCard
  **/
  @ApiModelProperty(value = "")
  public CreditCardMethod getCreditCard() {
    return creditCard;
  }

  public void setCreditCard(CreditCardMethod creditCard) {
    this.creditCard = creditCard;
  }

  public PaymentIntent currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public PaymentIntent errorCode(String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Get errorCode
   * @return errorCode
  **/
  @ApiModelProperty(value = "")
  public String getErrorCode() {
    return errorCode;
  }

  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }

  public PaymentIntent errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @ApiModelProperty(value = "")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public PaymentIntent gatewayType(GatewayTypeEnum gatewayType) {
    this.gatewayType = gatewayType;
    return this;
  }

   /**
   * Get gatewayType
   * @return gatewayType
  **/
  @ApiModelProperty(value = "")
  public GatewayTypeEnum getGatewayType() {
    return gatewayType;
  }

  public void setGatewayType(GatewayTypeEnum gatewayType) {
    this.gatewayType = gatewayType;
  }

  public PaymentIntent invoiceId(String invoiceId) {
    this.invoiceId = invoiceId;
    return this;
  }

   /**
   * Get invoiceId
   * @return invoiceId
  **/
  @ApiModelProperty(value = "")
  public String getInvoiceId() {
    return invoiceId;
  }

  public void setInvoiceId(String invoiceId) {
    this.invoiceId = invoiceId;
  }

  public PaymentIntent links(List<Link> links) {
    this.links = links;
    return this;
  }

  public PaymentIntent addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<Link>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }

  public PaymentIntent method(MethodEnum method) {
    this.method = method;
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @ApiModelProperty(value = "")
  public MethodEnum getMethod() {
    return method;
  }

  public void setMethod(MethodEnum method) {
    this.method = method;
  }

  public PaymentIntent owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public PaymentIntent partnerId(String partnerId) {
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Get partnerId
   * @return partnerId
  **/
  @ApiModelProperty(value = "")
  public String getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(String partnerId) {
    this.partnerId = partnerId;
  }

  public PaymentIntent paymentId(String paymentId) {
    this.paymentId = paymentId;
    return this;
  }

   /**
   * Get paymentId
   * @return paymentId
  **/
  @ApiModelProperty(value = "")
  public String getPaymentId() {
    return paymentId;
  }

  public void setPaymentId(String paymentId) {
    this.paymentId = paymentId;
  }

  public PaymentIntent processedDate(Long processedDate) {
    this.processedDate = processedDate;
    return this;
  }

   /**
   * Get processedDate
   * @return processedDate
  **/
  @ApiModelProperty(value = "")
  public Long getProcessedDate() {
    return processedDate;
  }

  public void setProcessedDate(Long processedDate) {
    this.processedDate = processedDate;
  }

  public PaymentIntent sandbox(Boolean sandbox) {
    this.sandbox = sandbox;
    return this;
  }

   /**
   * Get sandbox
   * @return sandbox
  **/
  @ApiModelProperty(value = "")
  public Boolean isSandbox() {
    return sandbox;
  }

  public void setSandbox(Boolean sandbox) {
    this.sandbox = sandbox;
  }

  public PaymentIntent status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentIntent paymentIntent = (PaymentIntent) o;
    return Objects.equals(this.id, paymentIntent.id) &&
        Objects.equals(this.ach, paymentIntent.ach) &&
        Objects.equals(this.amount, paymentIntent.amount) &&
        Objects.equals(this.branchId, paymentIntent.branchId) &&
        Objects.equals(this.createDate, paymentIntent.createDate) &&
        Objects.equals(this.creditCard, paymentIntent.creditCard) &&
        Objects.equals(this.currency, paymentIntent.currency) &&
        Objects.equals(this.errorCode, paymentIntent.errorCode) &&
        Objects.equals(this.errorMessage, paymentIntent.errorMessage) &&
        Objects.equals(this.gatewayType, paymentIntent.gatewayType) &&
        Objects.equals(this.invoiceId, paymentIntent.invoiceId) &&
        Objects.equals(this.links, paymentIntent.links) &&
        Objects.equals(this.method, paymentIntent.method) &&
        Objects.equals(this.owner, paymentIntent.owner) &&
        Objects.equals(this.partnerId, paymentIntent.partnerId) &&
        Objects.equals(this.paymentId, paymentIntent.paymentId) &&
        Objects.equals(this.processedDate, paymentIntent.processedDate) &&
        Objects.equals(this.sandbox, paymentIntent.sandbox) &&
        Objects.equals(this.status, paymentIntent.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, ach, amount, branchId, createDate, creditCard, currency, errorCode, errorMessage, gatewayType, invoiceId, links, method, owner, partnerId, paymentId, processedDate, sandbox, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentIntent {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ach: ").append(toIndentedString(ach)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    creditCard: ").append(toIndentedString(creditCard)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    gatewayType: ").append(toIndentedString(gatewayType)).append("\n");
    sb.append("    invoiceId: ").append(toIndentedString(invoiceId)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    paymentId: ").append(toIndentedString(paymentId)).append("\n");
    sb.append("    processedDate: ").append(toIndentedString(processedDate)).append("\n");
    sb.append("    sandbox: ").append(toIndentedString(sandbox)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

