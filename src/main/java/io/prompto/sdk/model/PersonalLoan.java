/*
 * Abella
 * Partner API application
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.prompto.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.prompto.sdk.model.Link;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * PersonalLoan
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-09T15:57:22.781-05:00")
public class PersonalLoan implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("_id")
  private String id = null;

  @SerializedName("balance")
  private BigDecimal balance = null;

  @SerializedName("branchId")
  private String branchId = null;

  @SerializedName("company")
  private String company = null;

  @SerializedName("createDate")
  private Long createDate = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("delinquentDate")
  private Long delinquentDate = null;

  @SerializedName("duration")
  private Integer duration = null;

  @SerializedName("endDate")
  private Long endDate = null;

  @SerializedName("frequency")
  private Integer frequency = null;

  /**
   * Gets or Sets frequencyUnit
   */
  @JsonAdapter(FrequencyUnitEnum.Adapter.class)
  public enum FrequencyUnitEnum {
    DAY("DAY"),
    
    WEEK("WEEK"),
    
    MONTH("MONTH"),
    
    YEAR("YEAR");

    private String value;

    FrequencyUnitEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FrequencyUnitEnum fromValue(String text) {
      for (FrequencyUnitEnum b : FrequencyUnitEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FrequencyUnitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FrequencyUnitEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FrequencyUnitEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FrequencyUnitEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("frequencyUnit")
  private FrequencyUnitEnum frequencyUnit = null;

  @SerializedName("gracePeriod")
  private Integer gracePeriod = null;

  /**
   * Gets or Sets gracePeriodUnit
   */
  @JsonAdapter(GracePeriodUnitEnum.Adapter.class)
  public enum GracePeriodUnitEnum {
    DAY("DAY"),
    
    WEEK("WEEK"),
    
    MONTH("MONTH"),
    
    YEAR("YEAR");

    private String value;

    GracePeriodUnitEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GracePeriodUnitEnum fromValue(String text) {
      for (GracePeriodUnitEnum b : GracePeriodUnitEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<GracePeriodUnitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GracePeriodUnitEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GracePeriodUnitEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return GracePeriodUnitEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("gracePeriodUnit")
  private GracePeriodUnitEnum gracePeriodUnit = null;

  @SerializedName("initialPayment")
  private BigDecimal initialPayment = null;

  @SerializedName("interestRate")
  private BigDecimal interestRate = null;

  @SerializedName("links")
  private List<Link> links = null;

  @SerializedName("metadata")
  private String metadata = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nextBillingCycle")
  private Long nextBillingCycle = null;

  @SerializedName("partnerId")
  private String partnerId = null;

  @SerializedName("paymentMethodId")
  private String paymentMethodId = null;

  @SerializedName("paymentPerPeriod")
  private BigDecimal paymentPerPeriod = null;

  @SerializedName("paymentsRemaining")
  private Integer paymentsRemaining = null;

  @SerializedName("period")
  private Integer period = null;

  @SerializedName("principal")
  private BigDecimal principal = null;

  @SerializedName("purchaseOrder")
  private String purchaseOrder = null;

  @SerializedName("startDate")
  private Long startDate = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PENDING("PENDING"),
    
    ACTIVE("ACTIVE"),
    
    DELINQUENT("DELINQUENT"),
    
    PAID("PAID");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("terminationDate")
  private Long terminationDate = null;

  @SerializedName("userFullName")
  private String userFullName = null;

  @SerializedName("userId")
  private String userId = null;

  public PersonalLoan id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PersonalLoan balance(BigDecimal balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getBalance() {
    return balance;
  }

  public void setBalance(BigDecimal balance) {
    this.balance = balance;
  }

  public PersonalLoan branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Get branchId
   * @return branchId
  **/
  @ApiModelProperty(value = "")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public PersonalLoan company(String company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @ApiModelProperty(value = "")
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }

  public PersonalLoan createDate(Long createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(value = "")
  public Long getCreateDate() {
    return createDate;
  }

  public void setCreateDate(Long createDate) {
    this.createDate = createDate;
  }

  public PersonalLoan currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public PersonalLoan delinquentDate(Long delinquentDate) {
    this.delinquentDate = delinquentDate;
    return this;
  }

   /**
   * Get delinquentDate
   * @return delinquentDate
  **/
  @ApiModelProperty(value = "")
  public Long getDelinquentDate() {
    return delinquentDate;
  }

  public void setDelinquentDate(Long delinquentDate) {
    this.delinquentDate = delinquentDate;
  }

  public PersonalLoan duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @ApiModelProperty(value = "")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public PersonalLoan endDate(Long endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(value = "")
  public Long getEndDate() {
    return endDate;
  }

  public void setEndDate(Long endDate) {
    this.endDate = endDate;
  }

  public PersonalLoan frequency(Integer frequency) {
    this.frequency = frequency;
    return this;
  }

   /**
   * Get frequency
   * @return frequency
  **/
  @ApiModelProperty(value = "")
  public Integer getFrequency() {
    return frequency;
  }

  public void setFrequency(Integer frequency) {
    this.frequency = frequency;
  }

  public PersonalLoan frequencyUnit(FrequencyUnitEnum frequencyUnit) {
    this.frequencyUnit = frequencyUnit;
    return this;
  }

   /**
   * Get frequencyUnit
   * @return frequencyUnit
  **/
  @ApiModelProperty(value = "")
  public FrequencyUnitEnum getFrequencyUnit() {
    return frequencyUnit;
  }

  public void setFrequencyUnit(FrequencyUnitEnum frequencyUnit) {
    this.frequencyUnit = frequencyUnit;
  }

  public PersonalLoan gracePeriod(Integer gracePeriod) {
    this.gracePeriod = gracePeriod;
    return this;
  }

   /**
   * Get gracePeriod
   * @return gracePeriod
  **/
  @ApiModelProperty(value = "")
  public Integer getGracePeriod() {
    return gracePeriod;
  }

  public void setGracePeriod(Integer gracePeriod) {
    this.gracePeriod = gracePeriod;
  }

  public PersonalLoan gracePeriodUnit(GracePeriodUnitEnum gracePeriodUnit) {
    this.gracePeriodUnit = gracePeriodUnit;
    return this;
  }

   /**
   * Get gracePeriodUnit
   * @return gracePeriodUnit
  **/
  @ApiModelProperty(value = "")
  public GracePeriodUnitEnum getGracePeriodUnit() {
    return gracePeriodUnit;
  }

  public void setGracePeriodUnit(GracePeriodUnitEnum gracePeriodUnit) {
    this.gracePeriodUnit = gracePeriodUnit;
  }

  public PersonalLoan initialPayment(BigDecimal initialPayment) {
    this.initialPayment = initialPayment;
    return this;
  }

   /**
   * Get initialPayment
   * @return initialPayment
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getInitialPayment() {
    return initialPayment;
  }

  public void setInitialPayment(BigDecimal initialPayment) {
    this.initialPayment = initialPayment;
  }

  public PersonalLoan interestRate(BigDecimal interestRate) {
    this.interestRate = interestRate;
    return this;
  }

   /**
   * Get interestRate
   * @return interestRate
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getInterestRate() {
    return interestRate;
  }

  public void setInterestRate(BigDecimal interestRate) {
    this.interestRate = interestRate;
  }

  public PersonalLoan links(List<Link> links) {
    this.links = links;
    return this;
  }

  public PersonalLoan addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<Link>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }

  public PersonalLoan metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  public PersonalLoan name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PersonalLoan nextBillingCycle(Long nextBillingCycle) {
    this.nextBillingCycle = nextBillingCycle;
    return this;
  }

   /**
   * Get nextBillingCycle
   * @return nextBillingCycle
  **/
  @ApiModelProperty(value = "")
  public Long getNextBillingCycle() {
    return nextBillingCycle;
  }

  public void setNextBillingCycle(Long nextBillingCycle) {
    this.nextBillingCycle = nextBillingCycle;
  }

  public PersonalLoan partnerId(String partnerId) {
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Get partnerId
   * @return partnerId
  **/
  @ApiModelProperty(value = "")
  public String getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(String partnerId) {
    this.partnerId = partnerId;
  }

  public PersonalLoan paymentMethodId(String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
    return this;
  }

   /**
   * Get paymentMethodId
   * @return paymentMethodId
  **/
  @ApiModelProperty(value = "")
  public String getPaymentMethodId() {
    return paymentMethodId;
  }

  public void setPaymentMethodId(String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }

  public PersonalLoan paymentPerPeriod(BigDecimal paymentPerPeriod) {
    this.paymentPerPeriod = paymentPerPeriod;
    return this;
  }

   /**
   * Get paymentPerPeriod
   * @return paymentPerPeriod
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getPaymentPerPeriod() {
    return paymentPerPeriod;
  }

  public void setPaymentPerPeriod(BigDecimal paymentPerPeriod) {
    this.paymentPerPeriod = paymentPerPeriod;
  }

  public PersonalLoan paymentsRemaining(Integer paymentsRemaining) {
    this.paymentsRemaining = paymentsRemaining;
    return this;
  }

   /**
   * Get paymentsRemaining
   * @return paymentsRemaining
  **/
  @ApiModelProperty(value = "")
  public Integer getPaymentsRemaining() {
    return paymentsRemaining;
  }

  public void setPaymentsRemaining(Integer paymentsRemaining) {
    this.paymentsRemaining = paymentsRemaining;
  }

  public PersonalLoan period(Integer period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @ApiModelProperty(value = "")
  public Integer getPeriod() {
    return period;
  }

  public void setPeriod(Integer period) {
    this.period = period;
  }

  public PersonalLoan principal(BigDecimal principal) {
    this.principal = principal;
    return this;
  }

   /**
   * Get principal
   * @return principal
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getPrincipal() {
    return principal;
  }

  public void setPrincipal(BigDecimal principal) {
    this.principal = principal;
  }

  public PersonalLoan purchaseOrder(String purchaseOrder) {
    this.purchaseOrder = purchaseOrder;
    return this;
  }

   /**
   * Get purchaseOrder
   * @return purchaseOrder
  **/
  @ApiModelProperty(value = "")
  public String getPurchaseOrder() {
    return purchaseOrder;
  }

  public void setPurchaseOrder(String purchaseOrder) {
    this.purchaseOrder = purchaseOrder;
  }

  public PersonalLoan startDate(Long startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(value = "")
  public Long getStartDate() {
    return startDate;
  }

  public void setStartDate(Long startDate) {
    this.startDate = startDate;
  }

  public PersonalLoan status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public PersonalLoan terminationDate(Long terminationDate) {
    this.terminationDate = terminationDate;
    return this;
  }

   /**
   * Get terminationDate
   * @return terminationDate
  **/
  @ApiModelProperty(value = "")
  public Long getTerminationDate() {
    return terminationDate;
  }

  public void setTerminationDate(Long terminationDate) {
    this.terminationDate = terminationDate;
  }

  public PersonalLoan userFullName(String userFullName) {
    this.userFullName = userFullName;
    return this;
  }

   /**
   * Get userFullName
   * @return userFullName
  **/
  @ApiModelProperty(value = "")
  public String getUserFullName() {
    return userFullName;
  }

  public void setUserFullName(String userFullName) {
    this.userFullName = userFullName;
  }

  public PersonalLoan userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonalLoan personalLoan = (PersonalLoan) o;
    return Objects.equals(this.id, personalLoan.id) &&
        Objects.equals(this.balance, personalLoan.balance) &&
        Objects.equals(this.branchId, personalLoan.branchId) &&
        Objects.equals(this.company, personalLoan.company) &&
        Objects.equals(this.createDate, personalLoan.createDate) &&
        Objects.equals(this.currency, personalLoan.currency) &&
        Objects.equals(this.delinquentDate, personalLoan.delinquentDate) &&
        Objects.equals(this.duration, personalLoan.duration) &&
        Objects.equals(this.endDate, personalLoan.endDate) &&
        Objects.equals(this.frequency, personalLoan.frequency) &&
        Objects.equals(this.frequencyUnit, personalLoan.frequencyUnit) &&
        Objects.equals(this.gracePeriod, personalLoan.gracePeriod) &&
        Objects.equals(this.gracePeriodUnit, personalLoan.gracePeriodUnit) &&
        Objects.equals(this.initialPayment, personalLoan.initialPayment) &&
        Objects.equals(this.interestRate, personalLoan.interestRate) &&
        Objects.equals(this.links, personalLoan.links) &&
        Objects.equals(this.metadata, personalLoan.metadata) &&
        Objects.equals(this.name, personalLoan.name) &&
        Objects.equals(this.nextBillingCycle, personalLoan.nextBillingCycle) &&
        Objects.equals(this.partnerId, personalLoan.partnerId) &&
        Objects.equals(this.paymentMethodId, personalLoan.paymentMethodId) &&
        Objects.equals(this.paymentPerPeriod, personalLoan.paymentPerPeriod) &&
        Objects.equals(this.paymentsRemaining, personalLoan.paymentsRemaining) &&
        Objects.equals(this.period, personalLoan.period) &&
        Objects.equals(this.principal, personalLoan.principal) &&
        Objects.equals(this.purchaseOrder, personalLoan.purchaseOrder) &&
        Objects.equals(this.startDate, personalLoan.startDate) &&
        Objects.equals(this.status, personalLoan.status) &&
        Objects.equals(this.terminationDate, personalLoan.terminationDate) &&
        Objects.equals(this.userFullName, personalLoan.userFullName) &&
        Objects.equals(this.userId, personalLoan.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, balance, branchId, company, createDate, currency, delinquentDate, duration, endDate, frequency, frequencyUnit, gracePeriod, gracePeriodUnit, initialPayment, interestRate, links, metadata, name, nextBillingCycle, partnerId, paymentMethodId, paymentPerPeriod, paymentsRemaining, period, principal, purchaseOrder, startDate, status, terminationDate, userFullName, userId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonalLoan {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    delinquentDate: ").append(toIndentedString(delinquentDate)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    frequencyUnit: ").append(toIndentedString(frequencyUnit)).append("\n");
    sb.append("    gracePeriod: ").append(toIndentedString(gracePeriod)).append("\n");
    sb.append("    gracePeriodUnit: ").append(toIndentedString(gracePeriodUnit)).append("\n");
    sb.append("    initialPayment: ").append(toIndentedString(initialPayment)).append("\n");
    sb.append("    interestRate: ").append(toIndentedString(interestRate)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nextBillingCycle: ").append(toIndentedString(nextBillingCycle)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    paymentPerPeriod: ").append(toIndentedString(paymentPerPeriod)).append("\n");
    sb.append("    paymentsRemaining: ").append(toIndentedString(paymentsRemaining)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    principal: ").append(toIndentedString(principal)).append("\n");
    sb.append("    purchaseOrder: ").append(toIndentedString(purchaseOrder)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    terminationDate: ").append(toIndentedString(terminationDate)).append("\n");
    sb.append("    userFullName: ").append(toIndentedString(userFullName)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

