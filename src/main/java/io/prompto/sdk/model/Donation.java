/*
 * Abella
 * Partner API application
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.prompto.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.prompto.sdk.model.Link;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * Donation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-04-09T15:57:22.781-05:00")
public class Donation implements Serializable {
  private static final long serialVersionUID = 1L;

  @SerializedName("_id")
  private String id = null;

  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("branchId")
  private String branchId = null;

  @SerializedName("campaignDescription")
  private String campaignDescription = null;

  @SerializedName("campaignId")
  private String campaignId = null;

  @SerializedName("campaignName")
  private String campaignName = null;

  @SerializedName("company")
  private String company = null;

  @SerializedName("createDate")
  private Long createDate = null;

  @SerializedName("currency")
  private String currency = null;

  /**
   * Gets or Sets donationType
   */
  @JsonAdapter(DonationTypeEnum.Adapter.class)
  public enum DonationTypeEnum {
    ONE_TIME("ONE_TIME"),
    
    RECURRING("RECURRING");

    private String value;

    DonationTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DonationTypeEnum fromValue(String text) {
      for (DonationTypeEnum b : DonationTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DonationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DonationTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DonationTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DonationTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("donationType")
  private DonationTypeEnum donationType = null;

  @SerializedName("dueDate")
  private Long dueDate = null;

  @SerializedName("externalMetadata")
  private String externalMetadata = null;

  @SerializedName("grandTotal")
  private BigDecimal grandTotal = null;

  @SerializedName("links")
  private List<Link> links = null;

  @SerializedName("metadata")
  private String metadata = null;

  @SerializedName("nextBillingCycle")
  private Long nextBillingCycle = null;

  @SerializedName("partnerId")
  private String partnerId = null;

  @SerializedName("paymentMethodId")
  private String paymentMethodId = null;

  @SerializedName("paymentNumber")
  private Integer paymentNumber = null;

  @SerializedName("period")
  private Integer period = null;

  /**
   * Gets or Sets periodUnit
   */
  @JsonAdapter(PeriodUnitEnum.Adapter.class)
  public enum PeriodUnitEnum {
    DAY("DAY"),
    
    WEEK("WEEK"),
    
    MONTH("MONTH"),
    
    YEAR("YEAR");

    private String value;

    PeriodUnitEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PeriodUnitEnum fromValue(String text) {
      for (PeriodUnitEnum b : PeriodUnitEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PeriodUnitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PeriodUnitEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PeriodUnitEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PeriodUnitEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("periodUnit")
  private PeriodUnitEnum periodUnit = null;

  @SerializedName("purchaseOrder")
  private String purchaseOrder = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    INACTIVE("INACTIVE"),
    
    ACTIVE("ACTIVE"),
    
    SUCCESS("SUCCESS"),
    
    CANCELED("CANCELED"),
    
    FINISHED("FINISHED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("userFullName")
  private String userFullName = null;

  @SerializedName("userId")
  private String userId = null;

  public Donation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Donation amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public Donation branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Get branchId
   * @return branchId
  **/
  @ApiModelProperty(value = "")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public Donation campaignDescription(String campaignDescription) {
    this.campaignDescription = campaignDescription;
    return this;
  }

   /**
   * Get campaignDescription
   * @return campaignDescription
  **/
  @ApiModelProperty(value = "")
  public String getCampaignDescription() {
    return campaignDescription;
  }

  public void setCampaignDescription(String campaignDescription) {
    this.campaignDescription = campaignDescription;
  }

  public Donation campaignId(String campaignId) {
    this.campaignId = campaignId;
    return this;
  }

   /**
   * Get campaignId
   * @return campaignId
  **/
  @ApiModelProperty(value = "")
  public String getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }

  public Donation campaignName(String campaignName) {
    this.campaignName = campaignName;
    return this;
  }

   /**
   * Get campaignName
   * @return campaignName
  **/
  @ApiModelProperty(value = "")
  public String getCampaignName() {
    return campaignName;
  }

  public void setCampaignName(String campaignName) {
    this.campaignName = campaignName;
  }

  public Donation company(String company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @ApiModelProperty(value = "")
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }

  public Donation createDate(Long createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(value = "")
  public Long getCreateDate() {
    return createDate;
  }

  public void setCreateDate(Long createDate) {
    this.createDate = createDate;
  }

  public Donation currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public Donation donationType(DonationTypeEnum donationType) {
    this.donationType = donationType;
    return this;
  }

   /**
   * Get donationType
   * @return donationType
  **/
  @ApiModelProperty(value = "")
  public DonationTypeEnum getDonationType() {
    return donationType;
  }

  public void setDonationType(DonationTypeEnum donationType) {
    this.donationType = donationType;
  }

  public Donation dueDate(Long dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @ApiModelProperty(value = "")
  public Long getDueDate() {
    return dueDate;
  }

  public void setDueDate(Long dueDate) {
    this.dueDate = dueDate;
  }

  public Donation externalMetadata(String externalMetadata) {
    this.externalMetadata = externalMetadata;
    return this;
  }

   /**
   * Get externalMetadata
   * @return externalMetadata
  **/
  @ApiModelProperty(value = "")
  public String getExternalMetadata() {
    return externalMetadata;
  }

  public void setExternalMetadata(String externalMetadata) {
    this.externalMetadata = externalMetadata;
  }

  public Donation grandTotal(BigDecimal grandTotal) {
    this.grandTotal = grandTotal;
    return this;
  }

   /**
   * Get grandTotal
   * @return grandTotal
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getGrandTotal() {
    return grandTotal;
  }

  public void setGrandTotal(BigDecimal grandTotal) {
    this.grandTotal = grandTotal;
  }

  public Donation links(List<Link> links) {
    this.links = links;
    return this;
  }

  public Donation addLinksItem(Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<Link>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }

  public Donation metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  public Donation nextBillingCycle(Long nextBillingCycle) {
    this.nextBillingCycle = nextBillingCycle;
    return this;
  }

   /**
   * Get nextBillingCycle
   * @return nextBillingCycle
  **/
  @ApiModelProperty(value = "")
  public Long getNextBillingCycle() {
    return nextBillingCycle;
  }

  public void setNextBillingCycle(Long nextBillingCycle) {
    this.nextBillingCycle = nextBillingCycle;
  }

  public Donation partnerId(String partnerId) {
    this.partnerId = partnerId;
    return this;
  }

   /**
   * Get partnerId
   * @return partnerId
  **/
  @ApiModelProperty(value = "")
  public String getPartnerId() {
    return partnerId;
  }

  public void setPartnerId(String partnerId) {
    this.partnerId = partnerId;
  }

  public Donation paymentMethodId(String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
    return this;
  }

   /**
   * Get paymentMethodId
   * @return paymentMethodId
  **/
  @ApiModelProperty(value = "")
  public String getPaymentMethodId() {
    return paymentMethodId;
  }

  public void setPaymentMethodId(String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }

  public Donation paymentNumber(Integer paymentNumber) {
    this.paymentNumber = paymentNumber;
    return this;
  }

   /**
   * Get paymentNumber
   * @return paymentNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getPaymentNumber() {
    return paymentNumber;
  }

  public void setPaymentNumber(Integer paymentNumber) {
    this.paymentNumber = paymentNumber;
  }

  public Donation period(Integer period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @ApiModelProperty(value = "")
  public Integer getPeriod() {
    return period;
  }

  public void setPeriod(Integer period) {
    this.period = period;
  }

  public Donation periodUnit(PeriodUnitEnum periodUnit) {
    this.periodUnit = periodUnit;
    return this;
  }

   /**
   * Get periodUnit
   * @return periodUnit
  **/
  @ApiModelProperty(value = "")
  public PeriodUnitEnum getPeriodUnit() {
    return periodUnit;
  }

  public void setPeriodUnit(PeriodUnitEnum periodUnit) {
    this.periodUnit = periodUnit;
  }

  public Donation purchaseOrder(String purchaseOrder) {
    this.purchaseOrder = purchaseOrder;
    return this;
  }

   /**
   * Get purchaseOrder
   * @return purchaseOrder
  **/
  @ApiModelProperty(value = "")
  public String getPurchaseOrder() {
    return purchaseOrder;
  }

  public void setPurchaseOrder(String purchaseOrder) {
    this.purchaseOrder = purchaseOrder;
  }

  public Donation status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public Donation userFullName(String userFullName) {
    this.userFullName = userFullName;
    return this;
  }

   /**
   * Get userFullName
   * @return userFullName
  **/
  @ApiModelProperty(value = "")
  public String getUserFullName() {
    return userFullName;
  }

  public void setUserFullName(String userFullName) {
    this.userFullName = userFullName;
  }

  public Donation userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Donation donation = (Donation) o;
    return Objects.equals(this.id, donation.id) &&
        Objects.equals(this.amount, donation.amount) &&
        Objects.equals(this.branchId, donation.branchId) &&
        Objects.equals(this.campaignDescription, donation.campaignDescription) &&
        Objects.equals(this.campaignId, donation.campaignId) &&
        Objects.equals(this.campaignName, donation.campaignName) &&
        Objects.equals(this.company, donation.company) &&
        Objects.equals(this.createDate, donation.createDate) &&
        Objects.equals(this.currency, donation.currency) &&
        Objects.equals(this.donationType, donation.donationType) &&
        Objects.equals(this.dueDate, donation.dueDate) &&
        Objects.equals(this.externalMetadata, donation.externalMetadata) &&
        Objects.equals(this.grandTotal, donation.grandTotal) &&
        Objects.equals(this.links, donation.links) &&
        Objects.equals(this.metadata, donation.metadata) &&
        Objects.equals(this.nextBillingCycle, donation.nextBillingCycle) &&
        Objects.equals(this.partnerId, donation.partnerId) &&
        Objects.equals(this.paymentMethodId, donation.paymentMethodId) &&
        Objects.equals(this.paymentNumber, donation.paymentNumber) &&
        Objects.equals(this.period, donation.period) &&
        Objects.equals(this.periodUnit, donation.periodUnit) &&
        Objects.equals(this.purchaseOrder, donation.purchaseOrder) &&
        Objects.equals(this.status, donation.status) &&
        Objects.equals(this.userFullName, donation.userFullName) &&
        Objects.equals(this.userId, donation.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, amount, branchId, campaignDescription, campaignId, campaignName, company, createDate, currency, donationType, dueDate, externalMetadata, grandTotal, links, metadata, nextBillingCycle, partnerId, paymentMethodId, paymentNumber, period, periodUnit, purchaseOrder, status, userFullName, userId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Donation {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    campaignDescription: ").append(toIndentedString(campaignDescription)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    campaignName: ").append(toIndentedString(campaignName)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    donationType: ").append(toIndentedString(donationType)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    externalMetadata: ").append(toIndentedString(externalMetadata)).append("\n");
    sb.append("    grandTotal: ").append(toIndentedString(grandTotal)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    nextBillingCycle: ").append(toIndentedString(nextBillingCycle)).append("\n");
    sb.append("    partnerId: ").append(toIndentedString(partnerId)).append("\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    paymentNumber: ").append(toIndentedString(paymentNumber)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    periodUnit: ").append(toIndentedString(periodUnit)).append("\n");
    sb.append("    purchaseOrder: ").append(toIndentedString(purchaseOrder)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    userFullName: ").append(toIndentedString(userFullName)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

