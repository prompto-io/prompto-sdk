/*
 * Abella
 * Partner API application
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.prompto.sdk.api;

import io.prompto.sdk.api.ApiException;
import io.prompto.sdk.model.PartnerUserListResponse;
import io.prompto.sdk.model.PartnerUserRequest;
import io.prompto.sdk.model.PartnerUserResponse;
import io.prompto.sdk.model.RestResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PartnerUserUiResourceApi
 */
@Ignore
public class PartnerUserUiResourceApiTest {

    private final PartnerUserUiResourceApi api = new PartnerUserUiResourceApi("", "", "");

    
    /**
     * activate
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void activateUsingPOSTTest() throws ApiException {
        String userId = null;
        PartnerUserResponse response = api.activateUsingPOST(userId);

        // TODO: test validations
    }
    
    /**
     * create
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUsingPOST1Test() throws ApiException {
        PartnerUserRequest req = null;
        PartnerUserResponse response = api.createUsingPOST1(req);

        // TODO: test validations
    }
    
    /**
     * deactivate
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deactivateUsingPOSTTest() throws ApiException {
        String userId = null;
        PartnerUserResponse response = api.deactivateUsingPOST(userId);

        // TODO: test validations
    }
    
    /**
     * delete
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUsingPOST1Test() throws ApiException {
        String userId = null;
        RestResponse response = api.deleteUsingPOST1(userId);

        // TODO: test validations
    }
    
    /**
     * get
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsingGET2Test() throws ApiException {
        String userId = null;
        PartnerUserResponse response = api.getUsingGET2(userId);

        // TODO: test validations
    }
    
    /**
     * list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUsingGET4Test() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String q = null;
        PartnerUserListResponse response = api.listUsingGET4(limit, offset, q);

        // TODO: test validations
    }
    
    /**
     * update
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUsingPOST1Test() throws ApiException {
        String userId = null;
        PartnerUserRequest req = null;
        PartnerUserResponse response = api.updateUsingPOST1(userId, req);

        // TODO: test validations
    }
    
}
